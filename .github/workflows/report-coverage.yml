name: Report coverage

on:
  pull_request:
    types: opened

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  TEST_WORKFLOW_NAME: Test

defaults:
  run:
    shell: bash

jobs:
  report:
    runs-on: ubuntu-20.04
    timeout-minutes: 5
    permissions:
      contents: read
      pull-requests: write
      actions: read
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - uses: actions/checkout@v4
      - name: Download coverage
        id: download_coverage
        run: |
          RUN_ID=`gh api \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "/repos/${GITHUB_REPOSITORY}/actions/runs?head_sha=${{ github.event.pull_request.head.sha }}" | \
            jq '.workflow_runs | sort_by(.id)[] | select(.name == "${{ env.TEST_WORKFLOW_NAME }}")  | select(.status == "completed") | select(.conclusion != "cancelled") | .id' | \
            jq -s last`
          if [ -z $RUN_ID ] || [ $RUN_ID = 'null' ]; then
            echo "skip_octocov=true" >> $GITHUB_OUTPUT
            exit 0
          fi
          ARTIFACT_ID=`gh api \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "/repos/${GITHUB_REPOSITORY}/actions/runs/${RUN_ID}/artifacts?name=coverage" | \
            jq ".artifacts[0].id"`
          if [ -z $ARTIFACT_ID ] || [ $ARTIFACT_ID = 'null' ]; then
            echo "skip_octocov=true" >> $GITHUB_OUTPUT
            exit 0
          fi
          gh api \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/${GITHUB_REPOSITORY}/actions/artifacts/${ARTIFACT_ID}/zip > artifact.zip
          mkdir -p coverage
          unzip artifact.zip -d coverage
      - name: Coverage Report by octocov
        uses: k1LoW/octocov-action@v1
        if: steps.download_coverage.outputs.skip_octocov != 'true'
