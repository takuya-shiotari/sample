name: Redis container example
on: push

env:
  RUBY_VERSION: 3.1.2
  FREETDS_VERSION: 1.3.17
  DB_HOST: 127.0.0.1
  DB_USER: sa
  DB_PASSWORD: "yourStrong(!)Password"

jobs:
  test:
    runs-on: ubuntu-22.04
    services:
      mssql:
        image: mcr.microsoft.com/mssql/server:2017-latest
        ports:
          - 1433:1433
        env:
          ACCEPT_EULA: "Y"
          SA_PASSWORD: ${{ env.DB_PASSWORD }}
    strategy:
      matrix:
        ci_node_total:
          - 16
        ci_node_index:
          - 0,1
          - 2,3
          - 4,5
          - 6,7
          - 8,9
          - 10,11
          - 12,13
          - 14,15
    steps:
      - uses: actions/checkout@v4.1.0
      - name: Cache freetds
        id: cache-Primes
        uses: actions/cache@v4
        with:
          path: ~/freetds-${{ env.FREETDS_VERSION }}
          key: ${{ runner.os }}-freetds
      - name: Install freetds
        run: |
          cd ~/
          if [ ! -d "freetds-${FREETDS_VERSION}" ]; then
            sudo apt-get update --allow-releaseinfo-change
            sudo apt-get -y install libsasl2-dev
            wget http://www.freetds.org/files/stable/freetds-${FREETDS_VERSION}.tar.gz
            tar -xzf freetds-${FREETDS_VERSION}.tar.gz
            cd freetds-${FREETDS_VERSION}
            sudo ./configure --with-tdsver=7.4
            sudo make
            cd ..
          fi
          cd freetds-${FREETDS_VERSION}
          sudo make install
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true
      - name: bundle exec rubocop
        run: bundle exec rubocop
      - name: Rspec
        env:
          PARALLEL_TESTS_CONCURRENCY: ${{ matrix.ci_node_total }}
          CONCURRENCY_INDEX: ${{ matrix.ci_node_index }}
        run: |
          bundle exec rails "parallel:setup[2]"
          bundle exec parallel_rspec -n $PARALLEL_TESTS_CONCURRENCY --only-group $CONCURRENCY_INDEX

      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.ci_node_index }}
          path: coverage/.resultset.json

  merge_coverage:
    needs: test
    runs-on: ubuntu-22.04
    steps:
      - name: download artifacts
        uses: actions/download-artifact@v4
      - name: move generated files
        run: |
          mkdir -p /tmp/coverage
          artifacts=($(ls))
          for artifact in "${artifacts[@]}"; do
            mv ${artifact}/.resultset.json /tmp/coverage/.resultset-${artifact}.json
            rm -r "${artifact}"
          done
      - uses: actions/checkout@v4.1.0
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true
      - name: Collates all result sets
        run: bundle exec rails "coverage:report[/tmp/coverage/.resultset-*.json]"
      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage

  report_coverage:
    needs: merge_coverage
    runs-on: ubuntu-latest
    steps:
      - name: download artifacts
        uses: actions/download-artifact@v4
        with:
          name: coverage
          path: coverage
      - name: Coverage Report by octocov
        uses: k1LoW/octocov-action@v1

  build_github_pages:
    needs: merge_coverage
    runs-on: ubuntu-latest
    steps:
      - name: download artifacts
        uses: actions/download-artifact@v4
        with:
          name: coverage
          path: coverage
      - name: Upload page artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: coverage

  deplo_github_pagesy:
    needs: build_github_pages
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
