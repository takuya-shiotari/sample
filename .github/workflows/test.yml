name: Test

on:
  push:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  BUNDLE_ENTERPRISE__CONTRIBSYS__COM: ${{ secrets.BUNDLE_ENTERPRISE__CONTRIBSYS__COM }}
  DB_PASSWORD: yourStrong(!)Password
  SWAGGER_UI_VERSION: v4.15.5
  TZ: Asia/Tokyo
  CI_NODE_TOTAL: 8
  CI_NODE_CPU_CORES: 2

jobs:
  build-elasticsearch:
    permissions:
      id-token: write
      contents: read
    uses: ./.github/workflows/build-elasticsearch.yml
    secrets: inherit

  setup-matrix:
    runs-on: ubuntu-20.04
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
      ci_rspec_total: ${{ steps.set-matrix.outputs.ci_rspec_total }}
    steps:
      - name: Set matrix
        id: set-matrix
        run: |
          ruby -e "
            require 'json'
            ci_node_total = ENV['CI_NODE_TOTAL'].to_i
            ci_node_cpu_cores = ENV['CI_NODE_CPU_CORES'].to_i
            ci_rspec_total = ci_node_total * ci_node_cpu_cores
            ci_node_index = ci_rspec_total.times.each_slice(ci_node_cpu_cores).map { |x| x.join(',') }
            matrix = { ci_node_index: ci_node_index }
            puts 'ci_rspec_total=' + ci_rspec_total.to_s
            puts 'matrix=' + JSON.dump(matrix)" >> $GITHUB_OUTPUT

  test:
    runs-on: ubuntu-20.04
    needs:
      - build-elasticsearch
      - setup-matrix
    services:
      mssql:
        image: mcr.microsoft.com/mssql/server:2017-latest
        ports:
          - 1433:1433
        env:
          ACCEPT_EULA: Y
          SA_PASSWORD: ${{ env.DB_PASSWORD }}
      dynamodb-local:
        image: amazon/dynamodb-local:1.17.0
        ports:
          - 8000:8000
      elasticsearch-node1:
        image: ${{ needs.build-elasticsearch.outputs.image }}
        credentials:
          username: ${{ needs.build-elasticsearch.outputs.username }}
          password: ${{ needs.build-elasticsearch.outputs.password }}
        env:
          cluster.name: elasticsearch-cluster
          node.name: elasticsearch-node1
          discovery.seed_hosts: elasticsearch-node1,elasticsearch-node2,elasticsearch-node3
          cluster.initial_master_nodes: elasticsearch-node1,elasticsearch-node2,elasticsearch-node3
          ES_JAVA_OPTS: -Xms256m -Xmx256m
        ports:
          - 9200:9200
          - 9600:9600
      elasticsearch-node2:
        image: ${{ needs.build-elasticsearch.outputs.image }}
        credentials:
          username: ${{ needs.build-elasticsearch.outputs.username }}
          password: ${{ needs.build-elasticsearch.outputs.password }}
        env:
          cluster.name: elasticsearch-cluster
          node.name: elasticsearch-node2
          discovery.seed_hosts: elasticsearch-node1,elasticsearch-node2,elasticsearch-node3
          cluster.initial_master_nodes: elasticsearch-node1,elasticsearch-node2,elasticsearch-node3
          ES_JAVA_OPTS: -Xms256m -Xmx256m
      elasticsearch-node3:
        image: ${{ needs.build-elasticsearch.outputs.image }}
        credentials:
          username: ${{ needs.build-elasticsearch.outputs.username }}
          password: ${{ needs.build-elasticsearch.outputs.password }}
        env:
          cluster.name: elasticsearch-cluster
          node.name: elasticsearch-node3
          discovery.seed_hosts: elasticsearch-node1,elasticsearch-node2,elasticsearch-node3
          cluster.initial_master_nodes: elasticsearch-node1,elasticsearch-node2,elasticsearch-node3
          ES_JAVA_OPTS: -Xms256m -Xmx256m
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.setup-matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.CI_USER_GITHUB_TOKEN }}
      - uses: ./.github/actions/setup-rails-application
      - name: Bundle assets
        run: |
          NODE_OPTIONS="--max-old-space-size=512" ./node_modules/.bin/webpack
      - name: Change owner /etc/mecabrc
        run: |
          sudo chown runner:runner /etc/mecabrc

          echo "; hogehoge" >> /etc/mecabrc
          mecab README.md
      - name: Run rspec
        env:
          PARALLEL_TESTS_CONCURRENCY: ${{ needs.setup-matrix.outputs.ci_rspec_total }}
          CONCURRENCY_INDEX: ${{ matrix.ci_node_index }}
        run: |
          bundle exec rails "parallel:setup[${CI_NODE_CPU_CORES}]"
          bundle exec parallel_rspec -n $PARALLEL_TESTS_CONCURRENCY --only-group $CONCURRENCY_INDEX
      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.ci_node_index }}
          path: coverage/.resultset.json
      - name: Run rspec only failures
        run: bundle exec rspec --only-failures

  report-coverage:
    needs: test
    runs-on: ubuntu-20.04
    permissions:
      contents: read
      pull-requests: write
    if: success() || failure()
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: coverage-*
      - name: Move generated files
        run: |
          mkdir -p /tmp/coverage
          artifacts=($(ls))
          for artifact in "${artifacts[@]}"; do
            mv ${artifact}/.resultset.json /tmp/coverage/.resultset-${artifact}.json
            rm -r "${artifact}"
          done
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-rails-application
      - name: Collates all result sets
        run: bundle exec rails "coverage:report[/tmp/coverage/.resultset-*.json]"
      - name: Coverage Report by octocov
        uses: k1LoW/octocov-action@v1
      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage

  build-github-pages:
    needs: report-coverage
    runs-on: ubuntu-20.04
    if: format('refs/heads/{0}', github.event.repository.default_branch) == github.ref
    steps:
      - uses: actions/checkout@v4
        with:
          path: main
      - name: Checkout swagger-ui
        uses: actions/checkout@v4
        with:
          repository: swagger-api/swagger-ui
          ref: ${{ env.SWAGGER_UI_VERSION }}
          path: swagger-ui
      - name: Download coverage artifacts
        uses: actions/download-artifact@v4
        with:
          name: coverage
          path: coverage
      - name: Build GitHub Pages
        run: |
          mkdir -p github_pages_artifact/swagger-ui/
          cp swagger-ui/dist/* github_pages_artifact/swagger-ui/
          cp -f main/docs/dist/swagger-ui/* github_pages_artifact/swagger-ui/
          cp -r coverage github_pages_artifact/
      - name: Upload page artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: github_pages_artifact/

  deploy-github-pages:
    needs: build-github-pages
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-20.04
    if: format('refs/heads/{0}', github.event.repository.default_branch) == github.ref
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
