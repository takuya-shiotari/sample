name: Build elasticsearch

on:
  workflow_call:
    outputs:
      registry:
        value: ${{ jobs.build.outputs.registry }}
      docker-password:
        value: ${{ jobs.build.outputs.docker-password }}
      tag:
        value: ${{ jobs.build.outputs.tag }}

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: "false"
      - uses: theowenyoung/folder-hash@v3
        id: elasticsearch-container
        with:
          path: |
            containers/elasticsearch
      - uses: tyriis/docker-image-tag-exists@v2.0.0
        id: docker-image-tag-exists
        with:
          registry: ${{ vars.ECR_REGISTRY }}
          repository: ${{ vars.ECR_REPOSITORY }}
          tag: ${{ steps.elasticsearch-container.outputs.hash }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        if: steps.docker-image-tag-exists.outputs.tag == 'not found'
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        if: steps.docker-image-tag-exists.outputs.tag == 'not found'
        with:
          registry: ${{ vars.ECR_REGISTRY }}
      - name: Build and push API
        uses: docker/build-push-action@v5
        if: steps.docker-image-tag-exists.outputs.tag == 'not found'
        with:
          push: true
          provenance: false
          context: containers/elasticsearch
          tags: ${{ vars.ECR_REGISTRY }}/${{ vars.ECR_REPOSITORY }}:${{ steps.elasticsearch-container.outputs.hash }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
    outputs:
      registry: ${{ steps.login-ecr.outputs.registry }}
      # docker-password: ${{ steps.login-ecr.outputs.docker_password_321055706437_dkr_ecr_ap_northeast_1_amazonaws_com }}
      docker-password: ${{ steps.login-ecr.outputs[format('docker_password_{0}_dkr_ecr_{1}_amazonaws_com', vars.AWS_ACCOUNT_ID, vars.AWS_REGION_UNDERSCORE)] }}
      tag: ${{ steps.elasticsearch-container.outputs.hash }}
