name: Build elasticsearch

on:
  workflow_call:
    outputs:
      image:
        value: ${{ jobs.build.outputs.image }}
      username:
        value: ${{ jobs.build.outputs.username }}
      password:
        value: ${{ jobs.build.outputs.password }}

env:
  ECR_DOCKER_USERNAME: AWS

jobs:
  build:
    runs-on: ubuntu-20.04
    env:
      ECR_REGISTRY: ${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.${{ vars.AWS_REGION }}.amazonaws.com
      ECR_REPOSITORY: ${{ vars.ECR_REPOSITORY }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: andac-ozcan/actions-find-and-replace-string@3
        id: aws-region-underscore
        with:
          source: ${{ vars.AWS_REGION }}
          find: '-'
          replace: '_'
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: ${{ vars.OIDC_ROLE_ARN_STG }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: 'false'
      - uses: theowenyoung/folder-hash@v3
        id: elasticsearch-container
        with:
          path: |
            containers/elasticsearch
      - uses: tyriis/docker-image-tag-exists@v2.0.0
        id: docker-image-tag-exists
        with:
          registry: ${{ env.ECR_REGISTRY }}
          repository: ${{ env.ECR_REPOSITORY }}
          tag: ${{ steps.elasticsearch-container.outputs.hash }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        if: steps.docker-image-tag-exists.outputs.tag == 'not found'
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        if: steps.docker-image-tag-exists.outputs.tag == 'not found'
        with:
          registry: ${{ env.ECR_REGISTRY }}
      - name: Build and push API
        uses: docker/build-push-action@v5
        if: steps.docker-image-tag-exists.outputs.tag == 'not found'
        with:
          push: true
          provenance: false
          context: containers/elasticsearch
          tags: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ steps.elasticsearch-container.outputs.hash }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
    outputs:
      image: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ steps.elasticsearch-container.outputs.hash }}
      username: ${{ env.ECR_DOCKER_USERNAME }}
      password: ${{ steps.login-ecr.outputs[format('docker_password_{0}_dkr_ecr_{1}_amazonaws_com', vars.AWS_ACCOUNT_ID, steps.aws-region-underscore.outputs.value)] }}
