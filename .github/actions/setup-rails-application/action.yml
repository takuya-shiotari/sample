name: Setup Rails application

on:
  workflow_call:

inputs:
  ruby-version:
    default: "3.1.2"
    required: false
  node-version:
    default: "14.21.2"
    required: false
  freetds-version:
    default: "1.3.17"
    required: false

runs:
  using: "composite"
  steps:
    - name: Cache freetds
      uses: actions/cache@v4
      with:
        path: ~/freetds-${{ inputs.freetds-version }}
        key: ${{ runner.os }}-freetds
    - name: Install packages
      shell: bash
      run: |
        sudo apt-get update --allow-releaseinfo-change
        sudo apt-get install -y wget build-essential make g++ awscli git mecab libmecab-dev mecab-ipadic mecab-ipadic-utf8 libjemalloc2 pkg-config
    - name: Install freetds
      env:
        FREETDS_VERSION: ${{ inputs.freetds-version }}
      shell: bash
      run: |
        cd ~/
        if [ ! -d "freetds-${FREETDS_VERSION}" ]; then
          sudo apt-get update --allow-releaseinfo-change
          sudo apt-get install -y freetds-dev gnutls-bin libgnutls28-dev libssl-dev
          wget http://www.freetds.org/files/stable/freetds-${FREETDS_VERSION}.tar.gz
          tar -xzf freetds-${FREETDS_VERSION}.tar.gz
          cd freetds-${FREETDS_VERSION}
          sudo ./configure --prefix=/usr/local --with-tdsver=7.4
          sudo make
          cd ..
        fi
        cd freetds-${FREETDS_VERSION}
        sudo make install
        sudo sed -i -e "s/\(^CipherString = \).*/\1DEFAULT@SECLEVEL=0/" /etc/ssl/openssl.cnf
        echo "MinProtocol = None" | sudo tee -a /etc/ssl/openssl.cnf
        cat /etc/ssl/openssl.cnf
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ inputs.ruby-version }}
        bundler-cache: true
    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node-version }}
    - name: Cache node_modules
      id: cache-node-modules
      uses: actions/cache@v4
      with:
        path: node_modules
        key: ${{ runner.os }}-${{ hashFiles('package-lock.json') }}
    - name: Install dpendencies
      shell: bash
      run: npm ci
