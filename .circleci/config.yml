version: 2.1
orbs:
  aws-cli: circleci/aws-cli@4.1.3
  aws-ecr: circleci/aws-ecr@9.0.3
  browser-tools: circleci/browser-tools@1.2.3
references:
  sample_image: &sample_image
    docker:
      - image: cimg/ruby:3.1.2-browsers
        entrypoint: /bin/sh
        user: root
        environment:
          DB_PASSWORD: "yourStrong(!)Password"
      - image: mcr.microsoft.com/mssql/server:2017-latest
        environment:
          ACCEPT_EULA: "Y"
          SA_PASSWORD: "yourStrong(!)Password"
      - image: circleci/dynamodb
  restore_bundler_cache: &restore_bundler_cache
    restore_cache:
      name: Restore bundler cache
      key: gems-{{ checksum "Gemfile.lock" }}-{{ .Environment.COMMON_CACHE_KEY }}
  restore_freetds_cache: &restore_freetds_cache
    restore_cache:
      name: Restore FreeTDS Cache
      keys:
        - 'freetds-1.3.17'
  install_freetds: &install_freetds
    run:
      name: make install freetds for bundle install
      command: |
        if [ ! -d "freetds-1.3.17" ]; then
          apt-get update --allow-releaseinfo-change
          apt-get -y install libsasl2-dev
          wget http://www.freetds.org/files/stable/freetds-1.3.17.tar.gz
          tar -xzf freetds-1.3.17.tar.gz
          cd freetds-1.3.17
          ./configure --with-tdsver=7.4
          make
          cd ..
        fi
        cd freetds-1.3.17
        make install
  save_freetds_cache: &save_freetds_cache
    save_cache:
      name: Save FreeTDS Cache
      paths:
        - ./freetds-1.3.17
      key: 'freetds-1.3.17'
  bundle_install: &bundle_install
    run:
      name: Bundle Install
      command: |
        gem install bundler:2.4.8
        bundle install --path=vendor/bundle --jobs=2 --retry=3
  save_bundler_cache: &save_bundler_cache
    save_cache:
      name: Save bundler cache
      key: gems-{{ checksum "Gemfile.lock" }}-{{ .Environment.COMMON_CACHE_KEY }}
      paths:
        - vendor/bundle
  restore_npm_cache: &restore_npm_cache
    restore_cache:
      name: Restore npm cache
      key: npm-cache-{{ checksum "package-lock.json" }}-{{ .Environment.COMMON_CACHE_KEY }}
  npm_install: &npm_install
    run:
      name: npm install
      command: npm install
  save_npm_cache: &save_npm_cache
    save_cache:
      name: Save npm cache
      key: npm-cache-{{ checksum "package-lock.json" }}-{{ .Environment.COMMON_CACHE_KEY }}
      paths:
        - node_modules

  add_ssh_keys: &add_ssh_keys
    add_ssh_keys:
      fingerprints:
        - "eb:e7:80:46:5a:67:7e:3a:69:d9:af:36:62:04:d9:7e"

  # add_ssh_keysを事前に処理しておく必要がある
  git_submodule_update: &git_submodule_update
    run:
      name: 'git submodule update'
      command: |
        git submodule sync

jobs:
  test:
    <<: *sample_image
    parallelism: 6
    resource_class: medium+
    working_directory: ~/sample
    environment:
      TZ: Asia/Tokyo
      PARALLEL_TESTS_CONCURRENCY: 3
    steps:
      - checkout
      - *add_ssh_keys
      - *git_submodule_update
      - *restore_bundler_cache
      - *restore_freetds_cache
      - *install_freetds
      - *save_freetds_cache
      - *bundle_install
      - *save_bundler_cache
      - *restore_npm_cache
      - *npm_install
      - *save_npm_cache
      - browser-tools/install-chrome:
        chrome-version: 114.0.5735.198
      - run:
          name: webpack
          command: |
            NODE_OPTIONS="--max-old-space-size=512" ./node_modules/.bin/webpack
      - run:
          name: Set up DB
          command: |
            bundle exec rails "parallel:setup[${PARALLEL_TESTS_CONCURRENCY}]"
      - run: |
          mkdir test_results
          TEST_FILES=$(circleci tests glob "spec/**/*_spec.rb")
          echo "$TEST_FILES" | circleci tests run --command="xargs bundle exec parallel_rspec -n ${PARALLEL_TESTS_CONCURRENCY}" --verbose --split-by=timings
      - run: bundle exec rspec --only-failures
      - store_test_results:
          path: test_results
      - store_artifacts:
          path: brakeman
      - store_artifacts:
          path: coverage
      - store_artifacts:
          path: tmp/screenshots

workflows:
  version: 2
  deploy:
    jobs:
      - test:
          filters:
            branches:
              ignore:
                - release
